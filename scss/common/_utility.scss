// ---------------------------------------------------------
// clearfix
// ---------------------------------------------------------
@mixin clrfx {
//ほんとはこうしたい
//%clrfx {
  zoom:1;
  &:before, &:after {
    content: "\0020";
    display: block;
    height: 0;
    overflow: hidden;
  }
  &:after {
    clear: both;
  }
}

// --------------------------------------------------
// 関数
// --------------------------------------------------
// RGBをそれぞれ同じ量だけ明るく(暗く)する関数
@function adjust-rgb($color, $dec: 1) {
  $num: 255 * $dec;
  @return adjust-color($color, $red: $num, $green: $num, $blue: $num);
}

// Replace Images
@mixin replaceImg ($wd, $ht, $url) {
  overflow: hidden;
  display: block;
  width: $wd;
  height: 0;
  padding-top: $ht;
  background: url($url) no-repeat left top;
}


//--------------------------------------------------
// Grid System
//--------------------------------------------------
@mixin grid ($span) {
  $tmpwd: ($column-width * $span) + ($gutter-width * ($span - 1));
  width: percentage($tmpwd / $content-width);
  margin-left: percentage($gutter-width / $content-width);
  float: left;
  &:first-child {
    margin-left: 0;
  }
}
@mixin row () {
  @include clrfx;
}


// ------------------------------------------------
// 要素のスタイルをリセットしたい時用
// ------------------------------------------------
@mixin element-reset {
  border: none;
  background: none;
  padding: 0;
  margin: 0;
  font-size: 13px;
  font-weight: normal;
}

// ---------------------------------------------------------
// display:inline-block を IE でも使えるようにする
// ---------------------------------------------------------
@mixin inline-block {
  display: inline-block;
  @if $support-ie6 or $support-ie7 {
    *display: inline;
    *zoom: 1;
  }
}

// ---------------------------------------------------------
// table-cell を IE でも使えるようにする
// ---------------------------------------------------------
@mixin table-cell {
  display:table-cell;
  * display: inline;
  * zoom: 1;
}

// ---------------------------------------------------------
// opacity を IE でも使えるようにする
// ---------------------------------------------------------
@mixin opacity($alphavalue) {
    opacity: $alphavalue;
    -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=#{ $alphavalue * 100 })"; // for IE 8
    filter: alpha(opacity=#{ $alphavalue * 100 }); // for IE 5-7
}

// ---------------------------------------------------------
// アイコンのSprite
// ---------------------------------------------------------
@mixin icon ( $pass, $width, $hight ) {
  @include inline-block;
  width: #{$width};
  height: #{$height};
  background: transparent url(#{$pass}) -1000px -1000px no-repeat;
  vertical-align: middle;
  text-indent: -9999px;
}
//個別のアイコン位置を指定
//.docomo80 {
//  background-position: -319px -77px;
//}
//.docomo160 {
//  background-position: -128px -213px;
//}

// Sprite
@mixin all-sprites($map, $dimensions: false){
  $base-class: sprite-map-name($map);

  .#{$base-class}-retina-sprite{
    background: sprite-url($map) no-repeat;
    @include background-size(image-width(sprite-path($map)) auto);
  }

  @each $sprite in sprite-names($map){
    .#{$base-class}-#{$sprite}{
      @extend .#{$base-class}-retina-sprite;
      @if $dimensions{
        width: image-width(sprite-file($map, $sprite));
        padding-top: image-height(sprite-file($map, $sprite));
        height: 0;
        overflow: hidden;
      }
      $pos: sprite-position($map, $sprite);
      background-position: nth($pos, 1) nth($pos, 2);
    }
  }
}

@mixin all-retina-sprites($map, $dimensions: false){
  $base-class: sprite-map-name($map);

  .#{$base-class}-retina-sprite{
    background: sprite-url($map) no-repeat;
    @include background-size(ceil(image-width(sprite-path($map)) / 2) auto);
  }

  @each $sprite in sprite-names($map){
    .#{$base-class}-#{$sprite}{
      @extend .#{$base-class}-retina-sprite;
      @if $dimensions{
        width: ceil(image-width(sprite-file($map, $sprite)) / 2);
        padding-top: ceil(image-height(sprite-file($map, $sprite)) / 2);
        height: 0;
        overflow: hidden;
      }
      $pos: sprite-position($map, $sprite);
      background-position: ceil(nth($pos, 1) / 2) ceil(nth($pos, 2) / 2);
    }
  }
}
